<?xml version="1.0"?>
<syntax name="sourcecode.smarty">
	<zones>
		<include collection="tags" />
						
		<include syntax="language-root.html" />
	</zones>
	
	<library>
		<collection name="tags">
			<zone name="metadata.comment.block">
				<starts-with>
	<!--				<expression>(?&lt;=\{)\*</expression>-->
					<expression>(\{\s*\*)</expression>
					<capture number="1" name="delimiter.balanced.begin.curly-brace.asterisk"/>
				</starts-with>
				<ends-with>
	<!--				<expression>\*(?=\})</expression>-->
					<expression>(\*\s*\})</expression>
					<capture number="1" name="delimiter.balanced.end.curly-brace.asterisk"/>
				</ends-with>
			</zone>
			
			<zone name="element.paired.literal">
				<starts-with>
					<expression>(\{)\s*(literal)\s*(\})</expression>
					<capture number="1" name="delimiter.balanced.bracket.begin.curly-brace"/>
					<capture number="2" name="identifier.function.tag.open.built-in"/>
					<capture number="3" name="delimiter.balanced.bracket.end.curly-brace"/>
				</starts-with>
				<ends-with>
					<expression>(\{)\s*/(literal)\s*(\})</expression>
					<capture number="1" name="delimiter.balanced.bracket.begin.curly-brace"/>
					<capture number="2" name="identifier.function.tag.close.built-in"/>
					<capture number="3" name="delimiter.balanced.bracket.end.curly-brace"/>
				</ends-with>
				<subzones name="embedded.language-root.html">
					<include syntax="language-root.html" />
				</subzones>
			</zone>
			
			<zone name="element.paired.php">
				<starts-with>
					<expression>(\{)\s*(php)\s*(\})</expression>
					<capture number="1" name="delimiter.balanced.bracket.begin.curly-brace"/>
					<capture number="2" name="identifier.function.tag.open.built-in"/>
					<capture number="3" name="delimiter.balanced.bracket.end.curly-brace"/>
				</starts-with>
				<ends-with>
					<expression>(\{)\s*/(php)\s*(\})</expression>
					<capture number="1" name="delimiter.balanced.bracket.begin.curly-brace"/>
					<capture number="2" name="identifier.function.tag.close.close.built-in"/>
					<capture number="3" name="delimiter.balanced.bracket.end.curly-brace"/>
				</ends-with>
				<subzones name="embedded.sourcecode.php">
					<include syntax="sourcecode.php" collection="language" />
				</subzones>
			</zone>
			
			<zone name="element.paired.open">
				<starts-with>
					<expression>(\{)\s*(((if|foreach|section))|(capture|strip))(?=(\s|\}))\b</expression>
					<capture number="1" name="delimiter.balanced.bracket.begin.curly-brace"/>
					<capture number="3" name="identifier.function.tag.open"/>
					<capture number="4" name="keyword.control"/>
					<capture number="5" name="identifier.function.tag.open.built-in"/>
				</starts-with>
				<ends-with>
					<expression>\}</expression>
					<capture number="0" name="delimiter.balanced.bracket.end.curly-brace"/>
				</ends-with>
				<subzones>
					<include collection="tag" />
				</subzones>
			</zone>
					
			<zone name="element.paired.close">
				<expression>(\{)\s*/(((if|foreach|section))|(capture|strip))\s*(\})</expression>
				<capture number="1" name="delimiter.balanced.bracket.begin.curly-brace"/>
				<capture number="3" name="identifier.function.tag.close"/>
				<capture number="4" name="keyword.control"/>
				<capture number="5" name="identifier.function.tag.close.built-in"/>
				<capture number="6" name="delimiter.balanced.bracket.end.curly-brace"/>
			</zone>
					
	
			<zone name="element.standalone">
				<starts-with>
					<expression>(\{)\s*(((else|elseif|foreachelse|sectionelse))|(config_load|counter|cycle|debug|eval|fetch|include_php|include|insert|math|rdelim|ldelim|assign|html_[a-z_]*)|([a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*))(?=(\s|\}))\b</expression>
					<capture number="1" name="delimiter.balanced.bracket.begin.curly-brace"/>
					<capture number="3" name="identifier.function.tag"/>
					<capture number="4" name="keyword.control"/>
					<capture number="5" name="identifier.function.tag.built-in"/>
					<capture number="6" name="identifier.function.tag"/>
				</starts-with>
				<ends-with>
					<expression>\}</expression>
					<capture number="0" name="delimiter.balanced.bracket.end.curly-brace"/>
				</ends-with>
				<subzones>
					<include collection="tag" />
				</subzones>
			</zone>
			
			<zone name="element.standalone.notag">
				<starts-with>
					<expression>(\{)\s*(?=[#"'\$])</expression>
					<capture number="1" name="delimiter.balanced.bracket.begin.curly-brace"/>
				</starts-with>
				<ends-with>
					<expression>\}</expression>
					<capture number="0" name="delimiter.balanced.bracket.end.curly-brace"/>
				</ends-with>
				<subzones>
					<include collection="element-notag" />
				</subzones>
			</zone>
			
			<zone name="element.empty">
				<starts-with>
					<expression>(\{)</expression>
					<capture number="1" name="delimiter.balanced.bracket.begin.curly-brace"/>
				</starts-with>
				<ends-with>
					<expression>(\})</expression>
					<capture number="0" name="delimiter.balanced.bracket.end.curly-brace"/>
				</ends-with>
			</zone>
		</collection>
	
		<collection name="tag">
			<zone name="operator.logical">
				<expression>(\b(and|or)\b|&amp;&amp;|\|\|)</expression>
			</zone>
			<zone name="operator">
				<expression>(\b(eq|neq|gt|lt|gte|lte|is|not|even|odd|not|mod|div|by)\b|===|==|!==|!=|!|&lt;=|&gt;=|&gt;|&lt;)</expression>
			</zone>

			<zone>
				<expression>\b([a-zA-Z_]+)(=)([a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*)?</expression>
				<capture number="1" name="attribute-name"/>
				<capture number="2" name="delimiter.separator.attribute"/>
				<capture number="3" name="literal.string.attribute-value.unquoted"/>
			</zone>

			<include collection="element-notag" />
		</collection>
		
		<collection name="element-notag">
			<zone name="identifier.function.variable-modifier">
<!--				<expression>\|(capitalize|cat|count_characters|count_paragraphs|count_sentences|count_words|date_format|default|escape|indent|lower|nl2br|regex_replace|replace|spacify|string_format|strip_tags|strip|truncate|upper|wordwrap)</expression>-->
					<expression>\|@?[a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*</expression>
			</zone>
		
			<zone name="identifier.variable.config">
				<starts-with>
					<expression>#</expression>
					<capture number="0" name="delimiter.balanced.hash.begin"/>
				</starts-with>
				<ends-with>
					<expression>#</expression>
					<capture number="0" name="delimiter.balanced.hash.end"/>
				</ends-with>
			</zone>
			
			<zone name="literal.string.quoted.single">
				<starts-with>
					<expression>'</expression>
					<capture number="0" name="delimiter.balanced.quote.single.begin"/>
				</starts-with>
				<ends-with>
					<expression>'</expression>
					<capture number="0" name="delimiter.balanced.quote.single.end"/>
				</ends-with>
				<subzones>
					<include collection="escape" />
				</subzones>
			</zone>

			<zone name="literal.string.quoted.double">
				<starts-with>
					<expression>"</expression>
					<capture number="0" name="delimiter.balanced.quote.double.begin"/>
				</starts-with>
				<ends-with>
					<expression>"</expression>
					<capture number="0" name="delimiter.balanced.quote.double.end"/>
				</ends-with>
				<subzones>
					<include collection="escape" />
					<include collection="variable.indexed" />
					<zone name="constant.escape.string">
						<starts-with>
							<expression>`</expression>
							<capture number="0" name="delimiter.balanced.quote.backquote.begin"/>
						</starts-with>
						<ends-with>
							<expression>`|(?=")</expression>
							<capture number="0" name="delimiter.balanced.quote.backquote.end"/>
						</ends-with>
						<subzones>
							<include collection="variable" />
							<include collection="math" />
						</subzones>
					</zone>
				</subzones>
			</zone>
			
			<zone name="literal.keyword.bool">
				<expression>\b(TRUE|FALSE|true|false)\b</expression>
			</zone>
			
			<zone name="delimiter.balanced.parenthesis.begin">
				<expression>\(</expression>
			</zone>
			
			<zone name="delimiter.balanced.parenthesis.end">
				<expression>\)</expression>
			</zone>

			<include collection="number" />
			
			<include collection="variable" />

			<include collection="math" />
		</collection>
		
		<collection name="escape">
			<zone name="constant.character.escape">
				<expression>\\.</expression>
			</zone>
		</collection>
		
		<collection name="number">
			<zone name="literal.numeric.float">
				<expression>\b([0-9]+)(\.)([0-9]+)\b</expression>
				<capture number="1" name="integral.value" />
				<capture number="2" name="delimiter.separator" />
				<capture number="3" name="fractional.value" />
			</zone>
			<zone name="literal.numeric.integer">
				<expression>\b[0-9]+\b</expression>
				<capture number="0" name="integral.value" />
			</zone>
		</collection>
		
		<collection name="math">
			<zone name="operator.mathematical">
				<expression>(?&lt;=[a-zA-Z0-9_\x{7f}-\x{ff}])[\+\-\*\/%](?=[\$0-9])</expression>
			</zone>
		</collection>
		
		<collection name="variable">
			<include collection="variable.extended" />
			<include collection="variable.indexed" />
		</collection>
		
		<collection name="variable.extended">
			<zone name="identifier.variable">
<!--				<expression>(\$)[a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*(([\[\]]|([\.])|(\$)[a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*|[a-zA-Z0-9_\x{7f}-\x{ff}]+)*)</expression>-->
				<expression>(\$)[a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*(([\[\]\.\$a-zA-Z0-9_\x{7f}-\x{ff}]|\-&gt;)*)</expression>
				<capture number="1" name="delimiter.structural.declarative"/>
				
				<capture number="2" name="identifier.variable.extended">
					<subzones>
						<include collection="index" />
						<zone name="identifier.variable.sub">
							<starts-with>
								<expression>((\.)|(-&gt;))</expression>
								<capture number="2" name="delimiter.separator"/>
								<capture number="3" name="delimiter.pointer"/>
							</starts-with>
							<ends-with>
								<expression>(?&lt;=[a-zA-Z0-9_\x{7f}-\x{ff}])\b</expression>
							</ends-with>
							<subzones>
								<include collection="variable.single" />
							</subzones>
						</zone>
					</subzones>
				</capture>
			</zone>
		</collection>
		
		<collection name="index">
			<zone name="literal.index">
				<starts-with>
					<expression>\[</expression>
					<capture number="0" name="delimiter.balanced.square-brace.begin"/>
				</starts-with>
				<ends-with>
					<expression>\]</expression>
					<capture number="0" name="delimiter.balanced.square-brace.end"/>
				</ends-with>
				<subzones>
					<include collection="variable.single" />
				</subzones>
			</zone>
		</collection>
		
		<collection name="variable.indexed">
			<zone name="identifier.variable">
				<expression>(\$)[a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*([\[\]\$a-zA-Z0-9_\x{7f}-\x{ff}]*)</expression>
				<capture number="1" name="delimiter.structural.declarative"/>
				
				<capture number="2" name="identifier.variable.extended">
					<subzones>
						<include collection="index" />
					</subzones>
				</capture>
			</zone>
		</collection>
		
		<collection name="variable.single">
			<zone name="identifier.variable.global">
				<expression>\b(\$)smarty</expression>
				<capture number="1" name="delimiter.structural.declarative"/>
			</zone>
			
			<zone name="identifier.variable.other">
				<expression>(\$)[a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*\b</expression>
				<capture number="1" name="delimiter.structural.declarative"/>
			</zone>
		</collection>
		
	</library>
</syntax>
